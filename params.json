{"tagline":"Automate a masonry heater with an Arduino.","name":"Arduino Thermo-server","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-24158768-9","body":"### Summary\r\n<img src=\"https://raw.github.com/dullahan-soft/thermo-server/master/images/heater-pre.jpg\" size=\"480x480\"/>\r\nA friend of mine recently installed a [masonry heater](http://en.wikipedia.org/wiki/Masonry_heater) in his home along with an attached oven and hot water tank.  He asked me if I could help him automate a water pump that passes hot water from the masonry heater to his hot water heater using temperature readings from the masonry heater as well as logging these temperature readings for later analysis.  \r\n\r\nThe rest of this page contains details on how we automated his system including Arduino code, a data visualization web app, and a parts list.\r\n\r\n### System Description\r\n<img src=\"https://raw.github.com/dullahan-soft/thermo-server/master/images/Thermo webserver schematic.png\" size=\"480x480\"/>\r\n\r\nFollowing are descriptions for each of the major modules:\r\n\r\n#### LCD\r\n* We attached a monochrome 16x2 LCD for easy local readings.  \r\n* You can cycle through the temperature readings using the left and right direction buttons.  \r\n* The LCD's backlight powers down after a minute of unuse.\r\n* Using Adafruit's LCD backpack and corresponding library, assembling and integrating an LCD was painless.\r\n\r\n#### Arduino Mega + Ethernet Shield\r\n* We choose the Mega to ensure we had enough pins for future expansions.\r\n* The Arduino is loaded with a web-server that serves system uptime, pump state, and temperature readings both in HTML and JSON formats.\r\n* The web-server uses DHCP.\r\n\r\n#### PowerSwitch Tail 2\r\n* To control the water pump we decided to try out the self contained PowerSwitch.\r\n* Interfacing the PowerSwitch with the Arduino only requires two pins, GRND and a digital pin to control the relay.\r\n* The pump is hard-coded to turn on when any of the thermocouple sensors detect a temperature in excess of 180 degress Fahrenheit.\r\n* In order not to thrash the pump we only check once a minute to see if the pump's state should change (although flucuations in and around 180 degrees are probably\r\nnot that great).\r\n\r\n#### Sensor Array\r\n* We went with four thermocouples to measure the temperatures in the oven, masonry heater firebox, water tank, and chimney.\r\n* I also added an analog temperature sensor to track the ambient temperature and make sure the Arduino and sensing array don't get too hot!\r\n* Adafruit's MAX31855 boards and corresponding library made interfacing with the thermocouples easy, which is a good thing since dealing with the sensitive thermocouples was a pain in the butt.\r\n\r\n#### Data Logging + Visualization\r\n* Originally my friend simply wanted the temperature readings served as HTML which he would scrape with a logging tool like Mango.\r\n* I added JSON support and whipped up a clientside data visualization app as well called \"dash\" short for \"dashboard\" not \"dachshund\".\r\n\r\n### Parts List\r\nHere is a list of all the hardware used above as well as links to providers we used and recommend:\r\n\r\n1. 4 x [K-Type Thermocouples](https://www.adafruit.com/products/270)\r\n2. 4 x [MAX31855 Boards](http://www.adafruit.com/products/269) (now includes 0.1 uF capacitors)\r\n3. [PowerSwitch Tail II](https://www.adafruit.com/products/268)\r\n4. [Arduino Mega](http://www.adafruit.com/products/191)\r\n5. [Arduino Ethernet Shield](https://www.adafruit.com/products/201)\r\n6. [Adafruit LCD Shield Kit](http://www.adafruit.com/products/714)\r\n7. [TMP36 Analog Temperature Sensor](http://www.adafruit.com/products/165)\r\n8. [Passive PoE Injector Cable Set](http://www.adafruit.com/products/435) (if you are going to go that route)\r\n\r\n### Software and Dash Demo\r\nThe code for the Arduino web-server can be found on [github](https://github.com/dullahan-soft/thermo-server).  The dash app can be found in the same repo.  An example dash instance (running off of simulated data) is also available if you would like to see it in action at [demo-dash.herokuapp.com](http://demo-dash.herokuapp.com/)\r\n \r\n### Authors and Contributors\r\nChris Cacciatore (@cacciatc)\r\n\r\n### Support or Contact\r\nemail: chris.cacciatore@dullahansoft.com\r\nweb: [dullahansoft](http://www.dullahansoft.com)\r\ntwitter: [@cacciatc](http://twitter.com/cacciatc)"}